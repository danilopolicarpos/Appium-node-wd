"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _path = _interopRequireDefault(require("path"));

var _fs2 = _interopRequireDefault(require("fs"));

var _appiumSupport = require("appium-support");

let helpers = {};

helpers.ensureInternetPermissionForApp = async function (adb, app) {
  let has = await adb.hasInternetPermissionFromManifest(app);

  if (has) {
    return;
  }

  let msg = 'Your apk does not have INTERNET permissions. Uiautomator2 needs ' + 'the internet permission to proceed. Please check if you have ' + '<uses-permission android:name="android.**permission.INTERNET"/>' + 'in your AndroidManifest.xml';
  throw new Error(msg);
};

helpers.signApp = async function (adb, appPath) {
  try {
    await _appiumSupport.fs.access(appPath, _fs2.default.W_OK);
  } catch (e) {
    throw new Error(`The application at '${appPath}' is not writeable. ` + `Please grant write permissions to this file or to its parent folder '${_path.default.dirname(appPath)}' ` + `for the Appium process, so it could sign the application`);
  }

  await adb.sign(appPath);
};

var _default = helpers;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9oZWxwZXJzLmpzIl0sIm5hbWVzIjpbImhlbHBlcnMiLCJlbnN1cmVJbnRlcm5ldFBlcm1pc3Npb25Gb3JBcHAiLCJhZGIiLCJhcHAiLCJoYXMiLCJoYXNJbnRlcm5ldFBlcm1pc3Npb25Gcm9tTWFuaWZlc3QiLCJtc2ciLCJFcnJvciIsInNpZ25BcHAiLCJhcHBQYXRoIiwiZnMiLCJhY2Nlc3MiLCJfZnMiLCJXX09LIiwiZSIsInBhdGgiLCJkaXJuYW1lIiwic2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFJQSxPQUFPLEdBQUcsRUFBZDs7QUFFQUEsT0FBTyxDQUFDQyw4QkFBUixHQUF5QyxnQkFBZ0JDLEdBQWhCLEVBQXFCQyxHQUFyQixFQUEwQjtBQUNqRSxNQUFJQyxHQUFHLEdBQUcsTUFBTUYsR0FBRyxDQUFDRyxpQ0FBSixDQUFzQ0YsR0FBdEMsQ0FBaEI7O0FBQ0EsTUFBSUMsR0FBSixFQUFTO0FBQ1A7QUFDRDs7QUFDRCxNQUFJRSxHQUFHLEdBQUcscUVBQ0EsK0RBREEsR0FFQSxpRUFGQSxHQUdBLDZCQUhWO0FBSUEsUUFBTSxJQUFJQyxLQUFKLENBQVVELEdBQVYsQ0FBTjtBQUNELENBVkQ7O0FBWUFOLE9BQU8sQ0FBQ1EsT0FBUixHQUFrQixnQkFBZ0JOLEdBQWhCLEVBQXFCTyxPQUFyQixFQUE4QjtBQUM5QyxNQUFJO0FBQ0YsVUFBTUMsa0JBQUdDLE1BQUgsQ0FBVUYsT0FBVixFQUFtQkcsYUFBSUMsSUFBdkIsQ0FBTjtBQUNELEdBRkQsQ0FFRSxPQUFPQyxDQUFQLEVBQVU7QUFDVixVQUFNLElBQUlQLEtBQUosQ0FBVyx1QkFBc0JFLE9BQVEsc0JBQS9CLEdBQ2Isd0VBQXVFTSxjQUFLQyxPQUFMLENBQWFQLE9BQWIsQ0FBc0IsSUFEaEYsR0FFYiwwREFGRyxDQUFOO0FBR0Q7O0FBQ0QsUUFBTVAsR0FBRyxDQUFDZSxJQUFKLENBQVNSLE9BQVQsQ0FBTjtBQUNELENBVEQ7O2VBV2VULE8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBfZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHsgZnMgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5cbmxldCBoZWxwZXJzID0ge307XG5cbmhlbHBlcnMuZW5zdXJlSW50ZXJuZXRQZXJtaXNzaW9uRm9yQXBwID0gYXN5bmMgZnVuY3Rpb24gKGFkYiwgYXBwKSB7XG4gIGxldCBoYXMgPSBhd2FpdCBhZGIuaGFzSW50ZXJuZXRQZXJtaXNzaW9uRnJvbU1hbmlmZXN0KGFwcCk7XG4gIGlmIChoYXMpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IG1zZyA9ICdZb3VyIGFwayBkb2VzIG5vdCBoYXZlIElOVEVSTkVUIHBlcm1pc3Npb25zLiBVaWF1dG9tYXRvcjIgbmVlZHMgJyArXG4gICAgICAgICAgICAndGhlIGludGVybmV0IHBlcm1pc3Npb24gdG8gcHJvY2VlZC4gUGxlYXNlIGNoZWNrIGlmIHlvdSBoYXZlICcgK1xuICAgICAgICAgICAgJzx1c2VzLXBlcm1pc3Npb24gYW5kcm9pZDpuYW1lPVwiYW5kcm9pZC4qKnBlcm1pc3Npb24uSU5URVJORVRcIi8+JyArXG4gICAgICAgICAgICAnaW4geW91ciBBbmRyb2lkTWFuaWZlc3QueG1sJztcbiAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG59O1xuXG5oZWxwZXJzLnNpZ25BcHAgPSBhc3luYyBmdW5jdGlvbiAoYWRiLCBhcHBQYXRoKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgZnMuYWNjZXNzKGFwcFBhdGgsIF9mcy5XX09LKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgVGhlIGFwcGxpY2F0aW9uIGF0ICcke2FwcFBhdGh9JyBpcyBub3Qgd3JpdGVhYmxlLiBgICtcbiAgICAgIGBQbGVhc2UgZ3JhbnQgd3JpdGUgcGVybWlzc2lvbnMgdG8gdGhpcyBmaWxlIG9yIHRvIGl0cyBwYXJlbnQgZm9sZGVyICcke3BhdGguZGlybmFtZShhcHBQYXRoKX0nIGAgK1xuICAgICAgYGZvciB0aGUgQXBwaXVtIHByb2Nlc3MsIHNvIGl0IGNvdWxkIHNpZ24gdGhlIGFwcGxpY2F0aW9uYCk7XG4gIH1cbiAgYXdhaXQgYWRiLnNpZ24oYXBwUGF0aCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoZWxwZXJzO1xuIl0sImZpbGUiOiJsaWIvaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiJ9
