"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

require("source-map-support/register");

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

commands.getAlertText = async function () {
  return await this.uiautomator2.jwproxy.command('/alert/text', 'GET', {});
};

commands.mobileAcceptAlert = async function (opts = {}) {
  return await this.uiautomator2.jwproxy.command('/alert/accept', 'POST', opts);
};

commands.postAcceptAlert = async function () {
  return await this.mobileAcceptAlert();
};

commands.mobileDismissAlert = async function (opts = {}) {
  return await this.uiautomator2.jwproxy.command('/alert/dismiss', 'POST', opts);
};

commands.postDismissAlert = async function () {
  return await this.mobileDismissAlert();
};

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9hbGVydC5qcyJdLCJuYW1lcyI6WyJjb21tYW5kcyIsImhlbHBlcnMiLCJleHRlbnNpb25zIiwiZ2V0QWxlcnRUZXh0IiwidWlhdXRvbWF0b3IyIiwiandwcm94eSIsImNvbW1hbmQiLCJtb2JpbGVBY2NlcHRBbGVydCIsIm9wdHMiLCJwb3N0QWNjZXB0QWxlcnQiLCJtb2JpbGVEaXNtaXNzQWxlcnQiLCJwb3N0RGlzbWlzc0FsZXJ0IiwiT2JqZWN0IiwiYXNzaWduIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFJQSxRQUFRLEdBQUcsRUFBZjtBQUFBLElBQW1CQyxPQUFPLEdBQUcsRUFBN0I7QUFBQSxJQUFpQ0MsVUFBVSxHQUFHLEVBQTlDOzs7O0FBRUFGLFFBQVEsQ0FBQ0csWUFBVCxHQUF3QixrQkFBa0I7QUFDeEMsU0FBTyxNQUFNLEtBQUtDLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFrQyxhQUFsQyxFQUFpRCxLQUFqRCxFQUF3RCxFQUF4RCxDQUFiO0FBQ0QsQ0FGRDs7QUFrQkFOLFFBQVEsQ0FBQ08saUJBQVQsR0FBNkIsZ0JBQWdCQyxJQUFJLEdBQUcsRUFBdkIsRUFBMkI7QUFDdEQsU0FBTyxNQUFNLEtBQUtKLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFrQyxlQUFsQyxFQUFtRCxNQUFuRCxFQUEyREUsSUFBM0QsQ0FBYjtBQUNELENBRkQ7O0FBSUFSLFFBQVEsQ0FBQ1MsZUFBVCxHQUEyQixrQkFBa0I7QUFDM0MsU0FBTyxNQUFNLEtBQUtGLGlCQUFMLEVBQWI7QUFDRCxDQUZEOztBQWtCQVAsUUFBUSxDQUFDVSxrQkFBVCxHQUE4QixnQkFBZ0JGLElBQUksR0FBRyxFQUF2QixFQUEyQjtBQUN2RCxTQUFPLE1BQU0sS0FBS0osWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLGdCQUFsQyxFQUFvRCxNQUFwRCxFQUE0REUsSUFBNUQsQ0FBYjtBQUNELENBRkQ7O0FBSUFSLFFBQVEsQ0FBQ1csZ0JBQVQsR0FBNEIsa0JBQWtCO0FBQzVDLFNBQU8sTUFBTSxLQUFLRCxrQkFBTCxFQUFiO0FBQ0QsQ0FGRDs7QUFJQUUsTUFBTSxDQUFDQyxNQUFQLENBQWNYLFVBQWQsRUFBMEJGLFFBQTFCLEVBQW9DQyxPQUFwQztlQUVlQyxVIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGNvbW1hbmRzID0ge30sIGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG5jb21tYW5kcy5nZXRBbGVydFRleHQgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoJy9hbGVydC90ZXh0JywgJ0dFVCcsIHt9KTtcbn07XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gQWNjZXB0QWxlcnRPcHRpb25zXG4gKiBAcHJvcGVydHkgez9zdHJpbmd9IGJ1dHRvbkxhYmVsIC0gVGhlIG5hbWUgb2YgdGhlIGJ1dHRvbiB0byBjbGljayBpbiBvcmRlciB0b1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2VwdCB0aGUgYWxlcnQuIElmIHRoZSBuYW1lIGlzIG5vdCBwcm92aWRlZFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gdGhlIHNjcmlwdCB3aWxsIHRyeSB0byBkZXRlY3QgdGhlIGJ1dHRvblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9tYXRpY2FsbHkuXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0FjY2VwdEFsZXJ0T3B0aW9uc30gb3B0c1xuICogQHRocm93cyB7SW52YWxpZEVsZW1lbnRTdGF0ZUVycm9yfSBJZiBubyBtYXRjaGluZyBidXR0b24sIHRoYXQgY2FuIGFjY2VwdCB0aGUgYWxlcnQsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbiBiZSBmb3VuZFxuICogQHRocm93cyB7Tm9BbGVydE9wZW5FcnJvcn0gSWYgbm8gYWxlcnQgaXMgcHJlc2VudFxuICovXG5jb21tYW5kcy5tb2JpbGVBY2NlcHRBbGVydCA9IGFzeW5jIGZ1bmN0aW9uIChvcHRzID0ge30pIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZCgnL2FsZXJ0L2FjY2VwdCcsICdQT1NUJywgb3B0cyk7XG59O1xuXG5jb21tYW5kcy5wb3N0QWNjZXB0QWxlcnQgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLm1vYmlsZUFjY2VwdEFsZXJ0KCk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IERpc21pc3NBbGVydE9wdGlvbnNcbiAqIEBwcm9wZXJ0eSB7P3N0cmluZ30gYnV0dG9uTGFiZWwgLSBUaGUgbmFtZSBvZiB0aGUgYnV0dG9uIHRvIGNsaWNrIGluIG9yZGVyIHRvXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzbWlzcyB0aGUgYWxlcnQuIElmIHRoZSBuYW1lIGlzIG5vdCBwcm92aWRlZFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gdGhlIHNjcmlwdCB3aWxsIHRyeSB0byBkZXRlY3QgdGhlIGJ1dHRvblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9tYXRpY2FsbHkuXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0Rpc21pc3NBbGVydE9wdGlvbnN9IG9wdHNcbiAqIEB0aHJvd3Mge0ludmFsaWRFbGVtZW50U3RhdGVFcnJvcn0gSWYgbm8gbWF0Y2hpbmcgYnV0dG9uLCB0aGF0IGNhbiBkaXNtaXNzIHRoZSBhbGVydCxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuIGJlIGZvdW5kXG4gKiBAdGhyb3dzIHtOb0FsZXJ0T3BlbkVycm9yfSBJZiBubyBhbGVydCBpcyBwcmVzZW50XG4gKi9cbmNvbW1hbmRzLm1vYmlsZURpc21pc3NBbGVydCA9IGFzeW5jIGZ1bmN0aW9uIChvcHRzID0ge30pIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZCgnL2FsZXJ0L2Rpc21pc3MnLCAnUE9TVCcsIG9wdHMpO1xufTtcblxuY29tbWFuZHMucG9zdERpc21pc3NBbGVydCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMubW9iaWxlRGlzbWlzc0FsZXJ0KCk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sImZpbGUiOiJsaWIvY29tbWFuZHMvYWxlcnQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
