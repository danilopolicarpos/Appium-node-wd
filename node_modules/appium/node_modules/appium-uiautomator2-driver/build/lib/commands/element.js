"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

require("source-map-support/register");

var _logger = _interopRequireDefault(require("../logger"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumBaseDriver = require("appium-base-driver");

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

function toBool(s) {
  return _lodash.default.isString(s) ? s.toLowerCase() === 'true' : !!s;
}

commands.getAttribute = async function (attribute, elementId) {
  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/attribute/${attribute}`, 'GET', {});
};

commands.elementDisplayed = async function (elementId) {
  return toBool((await this.getAttribute('displayed', elementId)));
};

commands.elementEnabled = async function (elementId) {
  return toBool((await this.getAttribute('enabled', elementId)));
};

commands.elementSelected = async function (elementId) {
  return toBool((await this.getAttribute('selected', elementId)));
};

commands.getName = async function (elementId) {
  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/name`, 'GET', {});
};

commands.getLocation = async function (elementId) {
  _logger.default.info(`calling get location: ${elementId}`);

  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/location`, 'GET', {});
};

commands.getSize = async function (elementId) {
  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/size`, 'GET', {});
};

commands.touchLongClick = async function (element, x, y, duration) {
  let params = {
    element,
    x,
    y,
    duration
  };
  return await this.uiautomator2.jwproxy.command(`/touch/longclick`, 'POST', {
    params
  });
};

commands.touchDown = async function (element, x, y) {
  let params = {
    element,
    x,
    y
  };
  return await this.uiautomator2.jwproxy.command(`/touch/down`, 'POST', {
    params
  });
};

commands.touchUp = async function (element, x, y) {
  let params = {
    element,
    x,
    y
  };
  return await this.uiautomator2.jwproxy.command(`/touch/up`, 'POST', {
    params
  });
};

commands.touchMove = async function (element, x, y) {
  let params = {
    element,
    x,
    y
  };
  return await this.uiautomator2.jwproxy.command(`/touch/move`, 'POST', {
    params
  });
};

helpers.doSetElementValue = async function (params) {
  return await this.uiautomator2.jwproxy.command(`/element/${params.elementId}/value`, 'POST', params);
};

commands.setValueImmediate = async function (keys, elementId) {
  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/value`, 'POST', {
    elementId,
    text: _lodash.default.isArray(keys) ? keys.join('') : keys,
    replace: false,
    unicodeKeyboard: this.opts.unicodeKeyboard
  });
};

commands.getText = async function (elementId) {
  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/text`, 'GET', {});
};

commands.click = async function (element) {
  return await this.uiautomator2.jwproxy.command(`/element/${element}/click`, 'POST', {
    element
  });
};

commands.getElementScreenshot = async function (element) {
  return await this.uiautomator2.jwproxy.command(`/element/${element}/screenshot`, 'GET', {});
};

commands.tap = async function (element, x = 0, y = 0, count = 1) {
  for (let i = 0; i < count; i++) {
    if (element) {
      let params = {
        element
      };

      if (x !== 0 || y !== 0) {
        params.x = x;
        params.y = y;
      }

      await this.uiautomator2.jwproxy.command(`/element/${element}/click`, 'POST', params);
    } else {
      await this.uiautomator2.jwproxy.command(`/appium/tap`, 'POST', {
        x,
        y
      });
    }
  }
};

commands.clear = async function (elementId) {
  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/clear`, 'POST', {
    elementId
  });
};

commands.getElementRect = async function (elementId) {
  if (this.isWebContext()) {
    _logger.default.debug(`Detected downstream chromedriver protocol: ${this.chromedriver.jwproxy.downstreamProtocol}`);

    if (this.chromedriver.jwproxy.downstreamProtocol === _appiumBaseDriver.BaseDriver.DRIVER_PROTOCOL.MJSONWP) {
      const {
        x,
        y
      } = await this.chromedriver.jwproxy.command(`/element/${elementId}/location`, 'GET');
      const {
        width,
        height
      } = await this.chromedriver.jwproxy.command(`/element/${elementId}/size`, 'GET');
      return {
        x,
        y,
        width,
        height
      };
    }

    return await this.chromedriver.jwproxy.command(`/element/${elementId}/rect`, 'GET');
  }

  return await this.uiautomator2.jwproxy.command(`/element/${elementId}/rect`, 'GET');
};

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,
