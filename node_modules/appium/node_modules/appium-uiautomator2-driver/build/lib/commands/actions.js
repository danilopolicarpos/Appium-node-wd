"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

require("source-map-support/register");

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

commands.pressKeyCode = async function (keycode, metastate = null, flags = null) {
  return await this.uiautomator2.jwproxy.command('/appium/device/press_keycode', 'POST', {
    keycode,
    metastate,
    flags
  });
};

commands.longPressKeyCode = async function (keycode, metastate = null, flags = null) {
  return await this.uiautomator2.jwproxy.command('/appium/device/long_press_keycode', 'POST', {
    keycode,
    metastate,
    flags
  });
};

commands.doSwipe = async function (swipeOpts) {
  return await this.uiautomator2.jwproxy.command(`/touch/perform`, 'POST', swipeOpts);
};

commands.doDrag = async function (dragOpts) {
  return await this.uiautomator2.jwproxy.command(`/touch/drag`, 'POST', dragOpts);
};

commands.getOrientation = async function () {
  return await this.uiautomator2.jwproxy.command(`/orientation`, 'GET', {});
};

commands.setOrientation = async function (orientation) {
  orientation = orientation.toUpperCase();
  return await this.uiautomator2.jwproxy.command(`/orientation`, 'POST', {
    orientation
  });
};

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9hY3Rpb25zLmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzIiwiaGVscGVycyIsImV4dGVuc2lvbnMiLCJwcmVzc0tleUNvZGUiLCJrZXljb2RlIiwibWV0YXN0YXRlIiwiZmxhZ3MiLCJ1aWF1dG9tYXRvcjIiLCJqd3Byb3h5IiwiY29tbWFuZCIsImxvbmdQcmVzc0tleUNvZGUiLCJkb1N3aXBlIiwic3dpcGVPcHRzIiwiZG9EcmFnIiwiZHJhZ09wdHMiLCJnZXRPcmllbnRhdGlvbiIsInNldE9yaWVudGF0aW9uIiwib3JpZW50YXRpb24iLCJ0b1VwcGVyQ2FzZSIsIk9iamVjdCIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUEsSUFBSUEsUUFBUSxHQUFHLEVBQWY7QUFBQSxJQUFtQkMsT0FBTyxHQUFHLEVBQTdCO0FBQUEsSUFBaUNDLFVBQVUsR0FBRyxFQUE5Qzs7OztBQUVBRixRQUFRLENBQUNHLFlBQVQsR0FBd0IsZ0JBQWdCQyxPQUFoQixFQUF5QkMsU0FBUyxHQUFHLElBQXJDLEVBQTJDQyxLQUFLLEdBQUcsSUFBbkQsRUFBeUQ7QUFDL0UsU0FBTyxNQUFNLEtBQUtDLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFrQyw4QkFBbEMsRUFBa0UsTUFBbEUsRUFBMEU7QUFDckZMLElBQUFBLE9BRHFGO0FBRXJGQyxJQUFBQSxTQUZxRjtBQUdyRkMsSUFBQUE7QUFIcUYsR0FBMUUsQ0FBYjtBQUtELENBTkQ7O0FBUUFOLFFBQVEsQ0FBQ1UsZ0JBQVQsR0FBNEIsZ0JBQWdCTixPQUFoQixFQUF5QkMsU0FBUyxHQUFHLElBQXJDLEVBQTJDQyxLQUFLLEdBQUcsSUFBbkQsRUFBeUQ7QUFDbkYsU0FBTyxNQUFNLEtBQUtDLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFrQyxtQ0FBbEMsRUFBdUUsTUFBdkUsRUFBK0U7QUFDMUZMLElBQUFBLE9BRDBGO0FBRTFGQyxJQUFBQSxTQUYwRjtBQUcxRkMsSUFBQUE7QUFIMEYsR0FBL0UsQ0FBYjtBQUtELENBTkQ7O0FBUUFOLFFBQVEsQ0FBQ1csT0FBVCxHQUFtQixnQkFBZ0JDLFNBQWhCLEVBQTJCO0FBQzVDLFNBQU8sTUFBTSxLQUFLTCxZQUFMLENBQWtCQyxPQUFsQixDQUEwQkMsT0FBMUIsQ0FBbUMsZ0JBQW5DLEVBQW9ELE1BQXBELEVBQTRERyxTQUE1RCxDQUFiO0FBQ0QsQ0FGRDs7QUFJQVosUUFBUSxDQUFDYSxNQUFULEdBQWtCLGdCQUFnQkMsUUFBaEIsRUFBMEI7QUFDMUMsU0FBTyxNQUFNLEtBQUtQLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFtQyxhQUFuQyxFQUFpRCxNQUFqRCxFQUF5REssUUFBekQsQ0FBYjtBQUNELENBRkQ7O0FBSUFkLFFBQVEsQ0FBQ2UsY0FBVCxHQUEwQixrQkFBa0I7QUFDMUMsU0FBTyxNQUFNLEtBQUtSLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFtQyxjQUFuQyxFQUFrRCxLQUFsRCxFQUF5RCxFQUF6RCxDQUFiO0FBQ0QsQ0FGRDs7QUFJQVQsUUFBUSxDQUFDZ0IsY0FBVCxHQUEwQixnQkFBZ0JDLFdBQWhCLEVBQTZCO0FBQ3JEQSxFQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0MsV0FBWixFQUFkO0FBQ0EsU0FBTyxNQUFNLEtBQUtYLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFtQyxjQUFuQyxFQUFrRCxNQUFsRCxFQUEwRDtBQUFDUSxJQUFBQTtBQUFELEdBQTFELENBQWI7QUFDRCxDQUhEOztBQUtBRSxNQUFNLENBQUNDLE1BQVAsQ0FBY2xCLFVBQWQsRUFBMEJGLFFBQTFCLEVBQW9DQyxPQUFwQztlQUVlQyxVIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmxldCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuY29tbWFuZHMucHJlc3NLZXlDb2RlID0gYXN5bmMgZnVuY3Rpb24gKGtleWNvZGUsIG1ldGFzdGF0ZSA9IG51bGwsIGZsYWdzID0gbnVsbCkge1xuICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKCcvYXBwaXVtL2RldmljZS9wcmVzc19rZXljb2RlJywgJ1BPU1QnLCB7XG4gICAga2V5Y29kZSxcbiAgICBtZXRhc3RhdGUsXG4gICAgZmxhZ3MsXG4gIH0pO1xufTtcblxuY29tbWFuZHMubG9uZ1ByZXNzS2V5Q29kZSA9IGFzeW5jIGZ1bmN0aW9uIChrZXljb2RlLCBtZXRhc3RhdGUgPSBudWxsLCBmbGFncyA9IG51bGwpIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZCgnL2FwcGl1bS9kZXZpY2UvbG9uZ19wcmVzc19rZXljb2RlJywgJ1BPU1QnLCB7XG4gICAga2V5Y29kZSxcbiAgICBtZXRhc3RhdGUsXG4gICAgZmxhZ3NcbiAgfSk7XG59O1xuXG5jb21tYW5kcy5kb1N3aXBlID0gYXN5bmMgZnVuY3Rpb24gKHN3aXBlT3B0cykge1xuICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKGAvdG91Y2gvcGVyZm9ybWAsICdQT1NUJywgc3dpcGVPcHRzKTtcbn07XG5cbmNvbW1hbmRzLmRvRHJhZyA9IGFzeW5jIGZ1bmN0aW9uIChkcmFnT3B0cykge1xuICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKGAvdG91Y2gvZHJhZ2AsICdQT1NUJywgZHJhZ09wdHMpO1xufTtcblxuY29tbWFuZHMuZ2V0T3JpZW50YXRpb24gPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoYC9vcmllbnRhdGlvbmAsICdHRVQnLCB7fSk7XG59O1xuXG5jb21tYW5kcy5zZXRPcmllbnRhdGlvbiA9IGFzeW5jIGZ1bmN0aW9uIChvcmllbnRhdGlvbikge1xuICBvcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uLnRvVXBwZXJDYXNlKCk7XG4gIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoYC9vcmllbnRhdGlvbmAsICdQT1NUJywge29yaWVudGF0aW9ufSk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sImZpbGUiOiJsaWIvY29tbWFuZHMvYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
