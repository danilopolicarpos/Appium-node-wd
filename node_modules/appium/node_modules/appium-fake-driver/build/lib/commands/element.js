"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = exports.commands = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumBaseDriver = require("appium-base-driver");

let commands = {},
    helpers = {},
    extensions = {};
exports.helpers = helpers;
exports.commands = commands;

helpers.getElements = function (elIds) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = elIds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      let elId = _step.value;

      if (!_lodash.default.has(this.elMap, elId)) {
        throw new _appiumBaseDriver.errors.StaleElementReferenceError();
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return elIds.map(e => this.elMap[e]);
};

helpers.getElement = function (elId) {
  return this.getElements([elId])[0];
};

commands.getName = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (elementId) {
    let el = this.getElement(elementId);
    return el.tagName;
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

commands.elementDisplayed = function () {
  var _ref2 = (0, _asyncToGenerator2.default)(function* (elementId) {
    let el = this.getElement(elementId);
    return el.isVisible();
  });

  return function (_x2) {
    return _ref2.apply(this, arguments);
  };
}();

commands.elementEnabled = function () {
  var _ref3 = (0, _asyncToGenerator2.default)(function* (elementId) {
    let el = this.getElement(elementId);
    return el.isEnabled();
  });

  return function (_x3) {
    return _ref3.apply(this, arguments);
  };
}();

commands.elementSelected = function () {
  var _ref4 = (0, _asyncToGenerator2.default)(function* (elementId) {
    let el = this.getElement(elementId);
    return el.isSelected();
  });

  return function (_x4) {
    return _ref4.apply(this, arguments);
  };
}();

commands.setValue = function () {
  var _ref5 = (0, _asyncToGenerator2.default)(function* (keys, elementId) {
    let value = keys;

    if (keys instanceof Array) {
      value = keys.join("");
    }

    let el = this.getElement(elementId);

    if (el.type !== "MockInputField") {
      throw new _appiumBaseDriver.errors.InvalidElementStateError();
    }

    el.setAttr('value', value);
  });

  return function (_x5, _x6) {
    return _ref5.apply(this, arguments);
  };
}();

commands.getText = function () {
  var _ref6 = (0, _asyncToGenerator2.default)(function* (elementId) {
    let el = this.getElement(elementId);
    return el.getAttr('value');
  });

  return function (_x7) {
    return _ref6.apply(this, arguments);
  };
}();

commands.clear = function () {
  var _ref7 = (0, _asyncToGenerator2.default)(function* (elementId) {
    yield this.setValue('', elementId);
  });

  return function (_x8) {
    return _ref7.apply(this, arguments);
  };
}();

commands.click = function () {
  var _ref8 = (0, _asyncToGenerator2.default)(function* (elementId) {
    this.assertNoAlert();
    let el = this.getElement(elementId);

    if (!el.isVisible()) {
      throw new _appiumBaseDriver.errors.InvalidElementStateError();
    }

    el.click();
    this.focusedElId = elementId;
  });

  return function (_x9) {
    return _ref8.apply(this, arguments);
  };
}();

commands.getAttribute = function () {
  var _ref9 = (0, _asyncToGenerator2.default)(function* (attr, elementId) {
    let el = this.getElement(elementId);
    return el.getAttr(attr);
  });

  return function (_x10, _x11) {
    return _ref9.apply(this, arguments);
  };
}();

commands.getLocation = function (elementId) {
  let el = this.getElement(elementId);
  return el.getLocation();
};

commands.getSize = function (elementId) {
  let el = this.getElement(elementId);
  return el.getSize();
};

commands.equalsElement = function (el1Id, el2Id) {
  let el1 = this.getElement(el1Id);
  let el2 = this.getElement(el2Id);
  return el1.equals(el2);
};

commands.getLocationInView = commands.getLocation;

commands.getCssProperty = function () {
  var _ref10 = (0, _asyncToGenerator2.default)(function* (prop, elementId) {
    this.assertWebviewContext();
    let el = this.getElement(elementId);
    return el.getCss(prop);
  });

  return function (_x12, _x13) {
    return _ref10.apply(this, arguments);
  };
}();

Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,
