"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.guineaPig = guineaPig;
exports.guineaPigScrollable = guineaPigScrollable;
exports.guineaPigAppBanner = guineaPigAppBanner;
exports.welcome = welcome;
exports.STATIC_DIR = void 0;

require("source-map-support/register");

var _path = _interopRequireDefault(require("path"));

var _logger = _interopRequireDefault(require("./logger"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

var _bluebird = _interopRequireDefault(require("bluebird"));

let STATIC_DIR = _path.default.resolve(__dirname, '..', '..', '..', 'static');

exports.STATIC_DIR = STATIC_DIR;

if (_lodash.default.isNull(_path.default.resolve(__dirname).match(/build[/\\]lib[/\\]express$/))) {
  exports.STATIC_DIR = STATIC_DIR = _path.default.resolve(__dirname, '..', '..', 'static');
}

async function guineaPigTemplate(req, res, page) {
  let delay = parseInt(req.params.delay || req.query.delay || 0, 10);
  let throwError = req.params.throwError || req.query.throwError || '';
  let params = {
    throwError,
    serverTime: parseInt(Date.now() / 1000, 10),
    userAgent: req.headers['user-agent'],
    comment: 'None'
  };

  if (req.method === 'POST') {
    params.comment = req.body.comments || params.comment;
  }

  _logger.default.debug(`Sending guinea pig response with params: ${JSON.stringify(params)}`);

  if (delay) {
    _logger.default.debug(`Waiting ${delay}ms before responding`);

    await _bluebird.default.delay(delay);
  }

  res.set('content-type', 'text/html');
  res.cookie('guineacookie1', 'i am a cookie value', {
    path: '/'
  });
  res.cookie('guineacookie2', 'cooki√©2', {
    path: '/'
  });
  res.cookie('guineacookie3', 'cant access this', {
    domain: '.blargimarg.com',
    path: '/'
  });
  res.send((await getTemplate(page))(params));
}

async function guineaPig(req, res) {
  return await guineaPigTemplate(req, res, 'guinea-pig.html');
}

async function guineaPigScrollable(req, res) {
  return await guineaPigTemplate(req, res, 'guinea-pig-scrollable.html');
}

async function guineaPigAppBanner(req, res) {
  return await guineaPigTemplate(req, res, 'guinea-pig-app-banner.html');
}

async function welcome(req, res) {
  let params = {
    message: 'Let\'s browse!'
  };

  _logger.default.debug(`Sending welcome response with params: ${JSON.stringify(params)}`);

  res.send((await getTemplate('welcome.html'))(params));
}

async function getTemplate(templateName) {
  let content = await _appiumSupport.fs.readFile(_path.default.resolve(STATIC_DIR, 'test', templateName));
  return _lodash.default.template(content.toString());
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9leHByZXNzL3N0YXRpYy5qcyJdLCJuYW1lcyI6WyJTVEFUSUNfRElSIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJfIiwiaXNOdWxsIiwibWF0Y2giLCJndWluZWFQaWdUZW1wbGF0ZSIsInJlcSIsInJlcyIsInBhZ2UiLCJkZWxheSIsInBhcnNlSW50IiwicGFyYW1zIiwicXVlcnkiLCJ0aHJvd0Vycm9yIiwic2VydmVyVGltZSIsIkRhdGUiLCJub3ciLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiY29tbWVudCIsIm1ldGhvZCIsImJvZHkiLCJjb21tZW50cyIsImxvZyIsImRlYnVnIiwiSlNPTiIsInN0cmluZ2lmeSIsIkIiLCJzZXQiLCJjb29raWUiLCJkb21haW4iLCJzZW5kIiwiZ2V0VGVtcGxhdGUiLCJndWluZWFQaWciLCJndWluZWFQaWdTY3JvbGxhYmxlIiwiZ3VpbmVhUGlnQXBwQmFubmVyIiwid2VsY29tZSIsIm1lc3NhZ2UiLCJ0ZW1wbGF0ZU5hbWUiLCJjb250ZW50IiwiZnMiLCJyZWFkRmlsZSIsInRlbXBsYXRlIiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBLElBQUlBLFVBQVUsR0FBR0MsY0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLEVBQW9DLElBQXBDLEVBQTBDLFFBQTFDLENBQWpCOzs7O0FBQ0EsSUFBSUMsZ0JBQUVDLE1BQUYsQ0FBU0osY0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCRyxLQUF4QixDQUE4Qiw0QkFBOUIsQ0FBVCxDQUFKLEVBQTJFO0FBR3pFLHVCQUFBTixVQUFVLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixJQUF4QixFQUE4QixJQUE5QixFQUFvQyxRQUFwQyxDQUFiO0FBQ0Q7O0FBRUQsZUFBZUksaUJBQWYsQ0FBa0NDLEdBQWxDLEVBQXVDQyxHQUF2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Q0FBQyxjQUFELENBQWxCLEVBQW9DckIsTUFBcEMsQ0FBVDtBQUNEOztBQUVELGVBQWVxQixXQUFmLENBQTRCTSxZQUE1QixFQUEwQztBQUN4QyxNQUFJQyxPQUFPLEdBQUcsTUFBTUMsa0JBQUdDLFFBQUgsQ0FBWTFDLGNBQUtDLE9BQUwsQ0FBYUYsVUFBYixFQUF5QixNQUF6QixFQUFpQ3dDLFlBQWpDLENBQVosQ0FBcEI7QUFDQSxTQUFPcEMsZ0JBQUV3QyxRQUFGLENBQVdILE9BQU8sQ0FBQ0ksUUFBUixFQUFYLENBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGxvZyBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgZnMgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5cblxubGV0IFNUQVRJQ19ESVIgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnLi4nLCAnLi4nLCAnc3RhdGljJyk7XG5pZiAoXy5pc051bGwocGF0aC5yZXNvbHZlKF9fZGlybmFtZSkubWF0Y2goL2J1aWxkWy9cXFxcXWxpYlsvXFxcXF1leHByZXNzJC8pKSkge1xuICAvLyBpbiBzb21lIGNvbnRleHRzIHdlIGFyZSBub3QgaW4gdGhlIGJ1aWxkIGRpcmVjdG9yeSxcbiAgLy8gc28gd2UgZG9uJ3Qgd2FudCB0byBnbyBiYWNrIHRoZSBleHRyYSBsZXZlbFxuICBTVEFUSUNfRElSID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJ3N0YXRpYycpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBndWluZWFQaWdUZW1wbGF0ZSAocmVxLCByZXMsIHBhZ2UpIHtcbiAgbGV0IGRlbGF5ID0gcGFyc2VJbnQocmVxLnBhcmFtcy5kZWxheSB8fCByZXEucXVlcnkuZGVsYXkgfHwgMCwgMTApO1xuICBsZXQgdGhyb3dFcnJvciA9IHJlcS5wYXJhbXMudGhyb3dFcnJvciB8fCByZXEucXVlcnkudGhyb3dFcnJvciB8fCAnJztcbiAgbGV0IHBhcmFtcyA9IHtcbiAgICB0aHJvd0Vycm9yLFxuICAgIHNlcnZlclRpbWU6IHBhcnNlSW50KERhdGUubm93KCkgLyAxMDAwLCAxMCksXG4gICAgdXNlckFnZW50OiByZXEuaGVhZGVyc1sndXNlci1hZ2VudCddLFxuICAgIGNvbW1lbnQ6ICdOb25lJ1xuICB9O1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgcGFyYW1zLmNvbW1lbnQgPSByZXEuYm9keS5jb21tZW50cyB8fCBwYXJhbXMuY29tbWVudDtcbiAgfVxuICBsb2cuZGVidWcoYFNlbmRpbmcgZ3VpbmVhIHBpZyByZXNwb25zZSB3aXRoIHBhcmFtczogJHtKU09OLnN0cmluZ2lmeShwYXJhbXMpfWApO1xuICBpZiAoZGVsYXkpIHtcbiAgICBsb2cuZGVidWcoYFdhaXRpbmcgJHtkZWxheX1tcyBiZWZvcmUgcmVzcG9uZGluZ2ApO1xuICAgIGF3YWl0IEIuZGVsYXkoZGVsYXkpO1xuICB9XG4gIHJlcy5zZXQoJ2NvbnRlbnQtdHlwZScsICd0ZXh0L2h0bWwnKTtcbiAgcmVzLmNvb2tpZSgnZ3VpbmVhY29va2llMScsICdpIGFtIGEgY29va2llIHZhbHVlJywge3BhdGg6ICcvJ30pO1xuICByZXMuY29va2llKCdndWluZWFjb29raWUyJywgJ2Nvb2tpw6kyJywge3BhdGg6ICcvJ30pO1xuICByZXMuY29va2llKCdndWluZWFjb29raWUzJywgJ2NhbnQgYWNjZXNzIHRoaXMnLCB7XG4gICAgZG9tYWluOiAnLmJsYXJnaW1hcmcuY29tJyxcbiAgICBwYXRoOiAnLydcbiAgfSk7XG4gIHJlcy5zZW5kKChhd2FpdCBnZXRUZW1wbGF0ZShwYWdlKSkocGFyYW1zKSk7XG59XG5cbi8qXG4gKiBEeW5hbWljIHBhZ2UgbWFwcGVkIHRvIC90ZXN0L2d1aW5lYS1waWdcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ3VpbmVhUGlnIChyZXEsIHJlcykge1xuICByZXR1cm4gYXdhaXQgZ3VpbmVhUGlnVGVtcGxhdGUocmVxLCByZXMsICdndWluZWEtcGlnLmh0bWwnKTtcbn1cblxuLypcbiAqIER5bmFtaWMgcGFnZSBtYXBwZWQgdG8gL3Rlc3QvZ3VpbmVhLXBpZy1zY3JvbGxhYmxlXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGd1aW5lYVBpZ1Njcm9sbGFibGUgKHJlcSwgcmVzKSB7XG4gIHJldHVybiBhd2FpdCBndWluZWFQaWdUZW1wbGF0ZShyZXEsIHJlcywgJ2d1aW5lYS1waWctc2Nyb2xsYWJsZS5odG1sJyk7XG59XG5cbi8qXG4gKiBEeW5hbWljIHBhZ2UgbWFwcGVkIHRvIC90ZXN0L2d1aW5lYS1waWctYXBwLWJhbm5lclxuICovXG5hc3luYyBmdW5jdGlvbiBndWluZWFQaWdBcHBCYW5uZXIgKHJlcSwgcmVzKSB7XG4gIHJldHVybiBhd2FpdCBndWluZWFQaWdUZW1wbGF0ZShyZXEsIHJlcywgJ2d1aW5lYS1waWctYXBwLWJhbm5lci5odG1sJyk7XG59XG5cbi8qXG4gKiBEeW5hbWljIHBhZ2UgbWFwcGVkIHRvIC93ZWxjb21lXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHdlbGNvbWUgKHJlcSwgcmVzKSB7XG4gIGxldCBwYXJhbXMgPSB7bWVzc2FnZTogJ0xldFxcJ3MgYnJvd3NlISd9O1xuICBsb2cuZGVidWcoYFNlbmRpbmcgd2VsY29tZSByZXNwb25zZSB3aXRoIHBhcmFtczogJHtKU09OLnN0cmluZ2lmeShwYXJhbXMpfWApO1xuICByZXMuc2VuZCgoYXdhaXQgZ2V0VGVtcGxhdGUoJ3dlbGNvbWUuaHRtbCcpKShwYXJhbXMpKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0VGVtcGxhdGUgKHRlbXBsYXRlTmFtZSkge1xuICBsZXQgY29udGVudCA9IGF3YWl0IGZzLnJlYWRGaWxlKHBhdGgucmVzb2x2ZShTVEFUSUNfRElSLCAndGVzdCcsIHRlbXBsYXRlTmFtZSkpO1xuICByZXR1cm4gXy50ZW1wbGF0ZShjb250ZW50LnRvU3RyaW5nKCkpO1xufVxuXG5leHBvcnQgeyBndWluZWFQaWcsIGd1aW5lYVBpZ1Njcm9sbGFibGUsIGd1aW5lYVBpZ0FwcEJhbm5lciwgd2VsY29tZSwgU1RBVElDX0RJUiB9O1xuIl0sImZpbGUiOiJsaWIvZXhwcmVzcy9zdGF0aWMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
