#!/usr/bin/env node
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "authorize", {
  enumerable: true,
  get: function () {
    return _authorizeIos.authorize;
  }
});
exports.appUtils = exports.uiauto = exports.utils = exports.device = exports.settings = exports.IOSPerformanceLog = exports.IOSCrashLog = exports.IOSLog = exports.default = exports.WEBVIEW_WIN = exports.NATIVE_WIN = exports.startHttpsServer = exports.instrumentsUtils = exports.Instruments = exports.IWDP = exports.defaultServerCaps = exports.iosCommands = exports.commands = exports.desiredCapValidation = exports.desiredCapConstraints = exports.IosDriver = void 0;

require("source-map-support/register");

var _yargs = _interopRequireDefault(require("yargs"));

var _asyncbox = require("asyncbox");

var server = _interopRequireWildcard(require("./lib/server"));

var driver = _interopRequireWildcard(require("./lib/driver"));

var caps = _interopRequireWildcard(require("./lib/desired-caps"));

var commandIndex = _interopRequireWildcard(require("./lib/commands/index"));

var settings = _interopRequireWildcard(require("./lib/settings"));

exports.settings = settings;

var device = _interopRequireWildcard(require("./lib/device"));

exports.device = device;

var utils = _interopRequireWildcard(require("./lib/utils"));

exports.utils = utils;

var iwdp = _interopRequireWildcard(require("./lib/iwdp"));

var uiauto = _interopRequireWildcard(require("./lib/uiauto/uiauto"));

exports.uiauto = uiauto;

var instruments = _interopRequireWildcard(require("./lib/instruments/index"));

var context = _interopRequireWildcard(require("./lib/commands/context"));

var _iosLog = _interopRequireDefault(require("./lib/device-log/ios-log"));

var _iosCrashLog = _interopRequireDefault(require("./lib/device-log/ios-crash-log"));

var _iosPerformanceLog = _interopRequireDefault(require("./lib/device-log/ios-performance-log"));

var appUtils = _interopRequireWildcard(require("./lib/app-utils"));

exports.appUtils = appUtils;

var _authorizeIos = require("./bin/authorize-ios");

const DEFAULT_HOST = 'localhost';
const DEFAULT_PORT = 4723;

async function main() {
  let port = _yargs.default.argv.port || DEFAULT_PORT;
  let host = _yargs.default.argv.host || DEFAULT_HOST;
  return await server.startServer(port, host);
}

if (require.main === module) {
  (0, _asyncbox.asyncify)(main);
}

const startHttpsServer = server.startHttpsServer;
exports.startHttpsServer = startHttpsServer;
const {
  IosDriver,
  defaultServerCaps
} = driver;
exports.defaultServerCaps = defaultServerCaps;
exports.IosDriver = IosDriver;
const {
  desiredCapConstraints,
  desiredCapValidation
} = caps;
exports.desiredCapValidation = desiredCapValidation;
exports.desiredCapConstraints = desiredCapConstraints;
const {
  commands,
  iosCommands
} = commandIndex;
exports.iosCommands = iosCommands;
exports.commands = commands;
const {
  IWDP
} = iwdp;
exports.IWDP = IWDP;
const {
  Instruments,
  instrumentsUtils
} = instruments;
exports.instrumentsUtils = instrumentsUtils;
exports.Instruments = Instruments;
const {
  NATIVE_WIN,
  WEBVIEW_WIN
} = context;
exports.WEBVIEW_WIN = WEBVIEW_WIN;
exports.NATIVE_WIN = NATIVE_WIN;
var _default = IosDriver;
exports.default = _default;
const IOSLog = _iosLog.default;
exports.IOSLog = IOSLog;
const IOSCrashLog = _iosCrashLog.default;
exports.IOSCrashLog = IOSCrashLog;
const IOSPerformanceLog = _iosPerformanceLog.default;
exports.IOSPerformanceLog = IOSPerformanceLog;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkRFRkFVTFRfSE9TVCIsIkRFRkFVTFRfUE9SVCIsIm1haW4iLCJwb3J0IiwieWFyZ3MiLCJhcmd2IiwiaG9zdCIsInNlcnZlciIsInN0YXJ0U2VydmVyIiwicmVxdWlyZSIsIm1vZHVsZSIsInN0YXJ0SHR0cHNTZXJ2ZXIiLCJJb3NEcml2ZXIiLCJkZWZhdWx0U2VydmVyQ2FwcyIsImRyaXZlciIsImRlc2lyZWRDYXBDb25zdHJhaW50cyIsImRlc2lyZWRDYXBWYWxpZGF0aW9uIiwiY2FwcyIsImNvbW1hbmRzIiwiaW9zQ29tbWFuZHMiLCJjb21tYW5kSW5kZXgiLCJJV0RQIiwiaXdkcCIsIkluc3RydW1lbnRzIiwiaW5zdHJ1bWVudHNVdGlscyIsImluc3RydW1lbnRzIiwiTkFUSVZFX1dJTiIsIldFQlZJRVdfV0lOIiwiY29udGV4dCIsIklPU0xvZyIsIkxvZyIsIklPU0NyYXNoTG9nIiwiQ3Jhc2hMb2ciLCJJT1NQZXJmb3JtYW5jZUxvZyIsIlBlcmZvcm1hbmNlTG9nIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFnQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7QUFvQkE7O0FBQ0E7O0FBQ0E7O0FBU0E7Ozs7QUFLQTs7QUEzREEsTUFBTUEsWUFBWSxHQUFHLFdBQXJCO0FBQ0EsTUFBTUMsWUFBWSxHQUFHLElBQXJCOztBQUVBLGVBQWVDLElBQWYsR0FBdUI7QUFDckIsTUFBSUMsSUFBSSxHQUFHQyxlQUFNQyxJQUFOLENBQVdGLElBQVgsSUFBbUJGLFlBQTlCO0FBQ0EsTUFBSUssSUFBSSxHQUFHRixlQUFNQyxJQUFOLENBQVdDLElBQVgsSUFBbUJOLFlBQTlCO0FBQ0EsU0FBTyxNQUFNTyxNQUFNLENBQUNDLFdBQVAsQ0FBbUJMLElBQW5CLEVBQXlCRyxJQUF6QixDQUFiO0FBQ0Q7O0FBRUQsSUFBSUcsT0FBTyxDQUFDUCxJQUFSLEtBQWlCUSxNQUFyQixFQUE2QjtBQUMzQiwwQkFBU1IsSUFBVDtBQUNEOztBQWNELE1BQU1TLGdCQUFnQixHQUFHSixNQUFNLENBQUNJLGdCQUFoQzs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFNBQUY7QUFBYUMsRUFBQUE7QUFBYixJQUFtQ0MsTUFBekM7OztBQUNBLE1BQU07QUFBRUMsRUFBQUEscUJBQUY7QUFBeUJDLEVBQUFBO0FBQXpCLElBQWtEQyxJQUF4RDs7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxRQUFGO0FBQVlDLEVBQUFBO0FBQVosSUFBNEJDLFlBQWxDOzs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBV0MsSUFBakI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxXQUFGO0FBQWVDLEVBQUFBO0FBQWYsSUFBb0NDLFdBQTFDOzs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFVBQUY7QUFBY0MsRUFBQUE7QUFBZCxJQUE4QkMsT0FBcEM7OztlQVFlaEIsUzs7QUFRZixNQUFNaUIsTUFBTSxHQUFHQyxlQUFmOztBQUNBLE1BQU1DLFdBQVcsR0FBR0Msb0JBQXBCOztBQUNBLE1BQU1DLGlCQUFpQixHQUFHQywwQkFBMUIiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG4vLyB0cmFuc3BpbGU6bWFpblxuXG5pbXBvcnQgeWFyZ3MgZnJvbSAneWFyZ3MnO1xuaW1wb3J0IHsgYXN5bmNpZnkgfSBmcm9tICdhc3luY2JveCc7XG5pbXBvcnQgKiBhcyBzZXJ2ZXIgZnJvbSAnLi9saWIvc2VydmVyJztcblxuY29uc3QgREVGQVVMVF9IT1NUID0gJ2xvY2FsaG9zdCc7XG5jb25zdCBERUZBVUxUX1BPUlQgPSA0NzIzO1xuXG5hc3luYyBmdW5jdGlvbiBtYWluICgpIHtcbiAgbGV0IHBvcnQgPSB5YXJncy5hcmd2LnBvcnQgfHwgREVGQVVMVF9QT1JUO1xuICBsZXQgaG9zdCA9IHlhcmdzLmFyZ3YuaG9zdCB8fCBERUZBVUxUX0hPU1Q7XG4gIHJldHVybiBhd2FpdCBzZXJ2ZXIuc3RhcnRTZXJ2ZXIocG9ydCwgaG9zdCk7XG59XG5cbmlmIChyZXF1aXJlLm1haW4gPT09IG1vZHVsZSkge1xuICBhc3luY2lmeShtYWluKTtcbn1cblxuXG5pbXBvcnQgKiBhcyBkcml2ZXIgZnJvbSAnLi9saWIvZHJpdmVyJztcbmltcG9ydCAqIGFzIGNhcHMgZnJvbSAnLi9saWIvZGVzaXJlZC1jYXBzJztcbmltcG9ydCAqIGFzIGNvbW1hbmRJbmRleCBmcm9tICcuL2xpYi9jb21tYW5kcy9pbmRleCc7XG5pbXBvcnQgKiBhcyBzZXR0aW5ncyBmcm9tICcuL2xpYi9zZXR0aW5ncyc7XG5pbXBvcnQgKiBhcyBkZXZpY2UgZnJvbSAnLi9saWIvZGV2aWNlJztcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vbGliL3V0aWxzJztcbmltcG9ydCAqIGFzIGl3ZHAgZnJvbSAnLi9saWIvaXdkcCc7XG5pbXBvcnQgKiBhcyB1aWF1dG8gZnJvbSAnLi9saWIvdWlhdXRvL3VpYXV0byc7XG5pbXBvcnQgKiBhcyBpbnN0cnVtZW50cyBmcm9tICcuL2xpYi9pbnN0cnVtZW50cy9pbmRleCc7XG5pbXBvcnQgKiBhcyBjb250ZXh0IGZyb20gJy4vbGliL2NvbW1hbmRzL2NvbnRleHQnO1xuXG5jb25zdCBzdGFydEh0dHBzU2VydmVyID0gc2VydmVyLnN0YXJ0SHR0cHNTZXJ2ZXI7XG5jb25zdCB7IElvc0RyaXZlciwgZGVmYXVsdFNlcnZlckNhcHMgfSA9IGRyaXZlcjtcbmNvbnN0IHsgZGVzaXJlZENhcENvbnN0cmFpbnRzLCBkZXNpcmVkQ2FwVmFsaWRhdGlvbiB9ID0gY2FwcztcbmNvbnN0IHsgY29tbWFuZHMsIGlvc0NvbW1hbmRzIH0gPSBjb21tYW5kSW5kZXg7XG5jb25zdCB7IElXRFAgfSA9IGl3ZHA7XG5jb25zdCB7IEluc3RydW1lbnRzLCBpbnN0cnVtZW50c1V0aWxzIH0gPSBpbnN0cnVtZW50cztcbmNvbnN0IHsgTkFUSVZFX1dJTiwgV0VCVklFV19XSU4gfSA9IGNvbnRleHQ7XG5cbmV4cG9ydCB7XG4gIElvc0RyaXZlciwgZGVzaXJlZENhcENvbnN0cmFpbnRzLCBkZXNpcmVkQ2FwVmFsaWRhdGlvbiwgY29tbWFuZHMsIGlvc0NvbW1hbmRzLFxuICBzZXR0aW5ncywgZGV2aWNlLCBkZWZhdWx0U2VydmVyQ2FwcywgdXRpbHMsIElXRFAsIHVpYXV0bywgSW5zdHJ1bWVudHMsXG4gIGluc3RydW1lbnRzVXRpbHMsIHN0YXJ0SHR0cHNTZXJ2ZXIsIE5BVElWRV9XSU4sIFdFQlZJRVdfV0lOLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgSW9zRHJpdmVyO1xuXG5cbi8vIGlvcyBsb2cgYWNjZXNzXG5pbXBvcnQgTG9nIGZyb20gJy4vbGliL2RldmljZS1sb2cvaW9zLWxvZyc7XG5pbXBvcnQgQ3Jhc2hMb2cgZnJvbSAnLi9saWIvZGV2aWNlLWxvZy9pb3MtY3Jhc2gtbG9nJztcbmltcG9ydCBQZXJmb3JtYW5jZUxvZyBmcm9tICcuL2xpYi9kZXZpY2UtbG9nL2lvcy1wZXJmb3JtYW5jZS1sb2cnO1xuXG5jb25zdCBJT1NMb2cgPSBMb2c7XG5jb25zdCBJT1NDcmFzaExvZyA9IENyYXNoTG9nO1xuY29uc3QgSU9TUGVyZm9ybWFuY2VMb2cgPSBQZXJmb3JtYW5jZUxvZztcblxuZXhwb3J0IHsgSU9TTG9nLCBJT1NDcmFzaExvZywgSU9TUGVyZm9ybWFuY2VMb2cgfTtcblxuLy8gYXBwIHV0aWxzXG5pbXBvcnQgKiBhcyBhcHBVdGlscyBmcm9tICcuL2xpYi9hcHAtdXRpbHMnO1xuXG5leHBvcnQgeyBhcHBVdGlscyB9O1xuXG4vLyBpT1MgYXV0aG9yaXplXG5pbXBvcnQgeyBhdXRob3JpemUgfSBmcm9tICcuL2Jpbi9hdXRob3JpemUtaW9zJztcblxuZXhwb3J0IHsgYXV0aG9yaXplIH07XG4iXSwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii4uIn0=
