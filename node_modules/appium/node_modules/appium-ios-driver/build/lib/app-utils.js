"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractAppDisplayName = extractAppDisplayName;
exports.extractBundleId = extractBundleId;

require("source-map-support/register");

var _path = _interopRequireDefault(require("path"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

var _logger = _interopRequireDefault(require("./logger.js"));

let plistObjects = {};

async function extractPlist(app) {
  let plistFile = _path.default.resolve(app, 'Info.plist');

  try {
    return await _appiumSupport.plist.parsePlistFile(plistFile);
  } catch (err) {
    _logger.default.errorAndThrow(`Could not extract Info.plist from application: ${err.message}`);
  }
}

async function extractPlistEntry(app, entryName) {
  if (_lodash.default.isUndefined(plistObjects[app])) {
    plistObjects[app] = await extractPlist(app);
  }

  return plistObjects[app][entryName];
}

async function extractAppDisplayName(app) {
  _logger.default.debug('Getting application name from app');

  return await extractPlistEntry(app, 'CFBundleDisplayName');
}

async function extractBundleId(app) {
  let bundleId = await extractPlistEntry(app, 'CFBundleIdentifier');

  _logger.default.debug(`Getting bundle ID from app '${app}': '${bundleId}'`);

  return bundleId;
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hcHAtdXRpbHMuanMiXSwibmFtZXMiOlsicGxpc3RPYmplY3RzIiwiZXh0cmFjdFBsaXN0IiwiYXBwIiwicGxpc3RGaWxlIiwicGF0aCIsInJlc29sdmUiLCJwbGlzdCIsInBhcnNlUGxpc3RGaWxlIiwiZXJyIiwibG9nIiwiZXJyb3JBbmRUaHJvdyIsIm1lc3NhZ2UiLCJleHRyYWN0UGxpc3RFbnRyeSIsImVudHJ5TmFtZSIsIl8iLCJpc1VuZGVmaW5lZCIsImV4dHJhY3RBcHBEaXNwbGF5TmFtZSIsImRlYnVnIiwiZXh0cmFjdEJ1bmRsZUlkIiwiYnVuZGxlSWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUdBLElBQUlBLFlBQVksR0FBRyxFQUFuQjs7QUFFQSxlQUFlQyxZQUFmLENBQTZCQyxHQUE3QixFQUFrQztBQUNoQyxNQUFJQyxTQUFTLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUgsR0FBYixFQUFrQixZQUFsQixDQUFoQjs7QUFDQSxNQUFJO0FBQ0YsV0FBTyxNQUFNSSxxQkFBTUMsY0FBTixDQUFxQkosU0FBckIsQ0FBYjtBQUNELEdBRkQsQ0FFRSxPQUFPSyxHQUFQLEVBQVk7QUFDWkMsb0JBQUlDLGFBQUosQ0FBbUIsa0RBQWlERixHQUFHLENBQUNHLE9BQVEsRUFBaEY7QUFDRDtBQUNGOztBQUVELGVBQWVDLGlCQUFmLENBQWtDVixHQUFsQyxFQUF1Q1csU0FBdkMsRUFBa0Q7QUFDaEQsTUFBSUMsZ0JBQUVDLFdBQUYsQ0FBY2YsWUFBWSxDQUFDRSxHQUFELENBQTFCLENBQUosRUFBc0M7QUFDcENGLElBQUFBLFlBQVksQ0FBQ0UsR0FBRCxDQUFaLEdBQW9CLE1BQU1ELFlBQVksQ0FBQ0MsR0FBRCxDQUF0QztBQUNEOztBQUVELFNBQU9GLFlBQVksQ0FBQ0UsR0FBRCxDQUFaLENBQWtCVyxTQUFsQixDQUFQO0FBQ0Q7O0FBRUQsZUFBZUcscUJBQWYsQ0FBc0NkLEdBQXRDLEVBQTJDO0FBQ3pDTyxrQkFBSVEsS0FBSixDQUFVLG1DQUFWOztBQUNBLFNBQU8sTUFBTUwsaUJBQWlCLENBQUNWLEdBQUQsRUFBTSxxQkFBTixDQUE5QjtBQUNEOztBQUVELGVBQWVnQixlQUFmLENBQWdDaEIsR0FBaEMsRUFBcUM7QUFDbkMsTUFBSWlCLFFBQVEsR0FBRyxNQUFNUCxpQkFBaUIsQ0FBQ1YsR0FBRCxFQUFNLG9CQUFOLENBQXRDOztBQUNBTyxrQkFBSVEsS0FBSixDQUFXLCtCQUE4QmYsR0FBSSxPQUFNaUIsUUFBUyxHQUE1RDs7QUFDQSxTQUFPQSxRQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBwbGlzdCB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBsb2cgZnJvbSAnLi9sb2dnZXIuanMnO1xuXG5cbmxldCBwbGlzdE9iamVjdHMgPSB7fTtcblxuYXN5bmMgZnVuY3Rpb24gZXh0cmFjdFBsaXN0IChhcHApIHtcbiAgbGV0IHBsaXN0RmlsZSA9IHBhdGgucmVzb2x2ZShhcHAsICdJbmZvLnBsaXN0Jyk7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IHBsaXN0LnBhcnNlUGxpc3RGaWxlKHBsaXN0RmlsZSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGxvZy5lcnJvckFuZFRocm93KGBDb3VsZCBub3QgZXh0cmFjdCBJbmZvLnBsaXN0IGZyb20gYXBwbGljYXRpb246ICR7ZXJyLm1lc3NhZ2V9YCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZXh0cmFjdFBsaXN0RW50cnkgKGFwcCwgZW50cnlOYW1lKSB7XG4gIGlmIChfLmlzVW5kZWZpbmVkKHBsaXN0T2JqZWN0c1thcHBdKSkge1xuICAgIHBsaXN0T2JqZWN0c1thcHBdID0gYXdhaXQgZXh0cmFjdFBsaXN0KGFwcCk7XG4gIH1cblxuICByZXR1cm4gcGxpc3RPYmplY3RzW2FwcF1bZW50cnlOYW1lXTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZXh0cmFjdEFwcERpc3BsYXlOYW1lIChhcHApIHtcbiAgbG9nLmRlYnVnKCdHZXR0aW5nIGFwcGxpY2F0aW9uIG5hbWUgZnJvbSBhcHAnKTtcbiAgcmV0dXJuIGF3YWl0IGV4dHJhY3RQbGlzdEVudHJ5KGFwcCwgJ0NGQnVuZGxlRGlzcGxheU5hbWUnKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZXh0cmFjdEJ1bmRsZUlkIChhcHApIHtcbiAgbGV0IGJ1bmRsZUlkID0gYXdhaXQgZXh0cmFjdFBsaXN0RW50cnkoYXBwLCAnQ0ZCdW5kbGVJZGVudGlmaWVyJyk7XG4gIGxvZy5kZWJ1ZyhgR2V0dGluZyBidW5kbGUgSUQgZnJvbSBhcHAgJyR7YXBwfSc6ICcke2J1bmRsZUlkfSdgKTtcbiAgcmV0dXJuIGJ1bmRsZUlkO1xufVxuXG5cbmV4cG9ydCB7IGV4dHJhY3RBcHBEaXNwbGF5TmFtZSwgZXh0cmFjdEJ1bmRsZUlkIH07XG4iXSwiZmlsZSI6ImxpYi9hcHAtdXRpbHMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
